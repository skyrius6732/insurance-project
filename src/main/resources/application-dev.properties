server.port=8081

spring.jpa.hibernate.ddl-auto=update

# H2 Database 설정 (로컬 개발 및 테스트용)
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console 활성화 (선택 사항, 개발 시 유용)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Hibernate Dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

spring.kafka.bootstrap-servers=localhost:9092

# Kafka 로깅 레벨 설정 (디버깅용)
logging.level.org.apache.kafka=INFO
logging.level.org.springframework.kafka=INFO

# ========================================
# Logging Configuration (DLQ 관련 상세 로그)
# ========================================
logging.level.org.springframework.kafka.listener.DefaultErrorHandler=DEBUG
logging.level.org.springframework.kafka.listener.KafkaMessageListenerContainer=DEBUG
logging.level.com.example.insurance_project.kafka.KafkaConsumerService=DEBUG

# ========================================
# Kafka Common Properties
# ========================================
# 스키마 레지스트리 서버 주소. 스키마를 등록하고 조회할 때 사용됩니다.
spring.kafka.properties.schema.registry.url=http://localhost:8085

# ========================================
# Kafka Producer Properties
# ========================================
# 메시지 키를 직렬화할 때 사용할 클래스입니다.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# 메시지 값을 직렬화할 때 사용할 클래스입니다. Avro 형식으로 직렬화하고 스키마 레지스트리와 통신합니다.
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# ========================================
# Kafka Consumer Properties
# ========================================
spring.kafka.consumer.group-id=insurance-group-avro
spring.kafka.consumer.auto-offset-reset=earliest
# 메시지 키를 역직렬화할 때 사용할 클래스입니다.
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 메시지 값을 역직렬화할 때 사용할 클래스입니다. Avro 형식의 데이터를 역직렬화하고 스키마 레지스트리와 통신합니다.
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer

# ========================================
# External APIs
# ========================================
faker.api.url=https://fakerapi.it/api/v1/custom

# ========================================
# Kafka Streams Properties
# ========================================
spring.kafka.streams.application-id=insurance-streams-app

